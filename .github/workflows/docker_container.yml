name: Deploy to EC2 defined in task 3

on:
  push:
  workflow_dispatch:

jobs:
  # Job 1 (Build and Tag the Docker Image)
  build_image:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Build Docker Image
        run: docker compose build

  # Job 2 (Test the Image by running it)
  test_image:
    name: Test Docker Image by Running
    runs-on: ubuntu-latest
    needs: build_image

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.2.2

      - name: Run the Image
        run: docker compose up -d

  # Job 3 (Push to Docker Hub)
  push_to_hub:
    name: Push Docker Image to hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.2.2

      - name: Login to Docker Registry
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push and Tag image to dockerhub
        uses: docker/build-push-action@v6.12.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/books-only-app:latest


  # Job 4 (Deploy App in EC2 instance *virtual machine*)
  deploy:
    name: Deploy to EC2 instance defined in Task 3
    runs-on: ubuntu-latest
    needs: push_to_hub

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.2.2

      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > priv_key.pem
          chmod 400 priv_key.pem
          ssh -o StrictHostKeyChecking=no \
          -i priv_key.pem \
          ubuntu@${{ secrets.EC2_PUBLIC_IP }} \
          "echo 'SSH setup successful'"

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no \
            -i priv_key.pem \
            ubuntu@${{ secrets.EC2_PUBLIC_IP }} \
            "./install-docker.sh && \
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} && \
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/books-only-app:latest && \
            docker compose -f sil-tasks/compose.yml up -d"